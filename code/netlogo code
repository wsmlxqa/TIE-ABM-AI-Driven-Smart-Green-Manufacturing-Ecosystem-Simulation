globals [
  ; —————— Core Parameters ——————
  gamma           ; Knowledge spillover intensity
  delta           ; AI energy efficiency
  epsilon         ; Clean transition acceleration coefficient (increased)
  disruption-prob ; External shock probability

  supply          ; Total supply
  demand          ; Market demand
  price           ; Market price
  base-price      ; Base price
  elasticity      ; Price elasticity (increased)

  ; —————— Policy Tools ——————
  green-subsidy   ; Green subsidy
  ai-innovation-subsidy ; AI innovation subsidy
  carbon-tax      ; Technology backwardness tax
  energy-tax      ; New: Basic energy tax (for fund)

  gov-budget      ; Government budget
  budget-capacity ; Budget ceiling
  transition-fund ; Transition fund

  avg-ai-level    ; Average AI level
  avg-ai-gen      ; Average AI generation

  ; —————— Capacity Limits ——————
  max-manufacturers
  max-suppliers

  ; —————— Base Demand ——————
  base-demand

  ; ✅ Record previous average generation
  prev-ai-gen
]

breed [ suppliers supplier ]
breed [ manufacturers manufacturer ]

manufacturers-own [
  competitiveness   ; ← Replaced energy
  ai-level       ; 0.0 ~ 1.0
  ai-generation ; G1, G2, G3...
]

suppliers-own [
  competitiveness   ; ← Replaced energy
]

patches-own [
  countdown      ; Green transition countdown
]

to setup
  clear-all
  file-close-all

  ; Parameter initialization (optimized version)
  set gamma 0.012
  set delta 0.04
  set epsilon 0.001        ; ✅ Increased 100x to accelerate green transition
  set disruption-prob 0.02
  set base-price 1.8       ; ✅ Increased base price
  set elasticity 1.1       ; ✅ Increased elasticity, more sensitive demand
  set gov-budget 1000
  set budget-capacity 1000
  set transition-fund 0
  set base-demand 50

  set max-manufacturers 600
  set max-suppliers 3000

  set prev-ai-gen 1.0

  ; Create geographic space
  ask patches [
    ifelse random-float 1 < 0.2 [
      set pcolor green
      set countdown 0
    ] [
      set pcolor brown
      set countdown random 60
    ]
  ]

  ; Create initial enterprises
  create-suppliers 100 [
    setxy random-xcor random-ycor
    set shape "circle"
    set color yellow
    set label "S"
    set competitiveness 16   ; ← Replaced energy
  ]

  create-manufacturers 50 [
    setxy random-xcor random-ycor
    set shape "house"
    set color blue
    set label "G1"
    set competitiveness 30   ; ← Replaced energy
    set ai-level 0.0
    set ai-generation 1
  ]

  ; Create CSV file
  file-open "smart-green-manufacturing-data-v8.0 update.csv"
  file-print "tick,NumAIFactories,NumSuppliers,GreenZones,AvgAILevel,AvgAIGen,MarketPrice,GovBudget,TransitionFund,Supply,Demand"
  file-close

  print (word "🏭 Setup: AI Factories=" count manufacturers ", Suppliers=" count suppliers)
  reset-ticks
end

to go
  if not any? turtles [ stop ]

  ; —————— Enhanced Market Mechanism ——————
  set supply count suppliers

  ; ✅ Demand = base × (1 + (generation-1)*0.8)^1.3 → stronger technology dividend
  let tech-multiplier 1 + (max (list 0 (avg-ai-gen - 1))) * 0.8
  set demand base-demand * (tech-multiplier ^ 2.0)  ; Previously ^1.0

  ; ✅ Price = base × (demand/supply)^elasticity + fluctuation
  set price base-price * (demand / supply) ^ elasticity
  set price price * (0.98 + random-float 0.04)  ; ±2% fluctuation
  set price precision (max (list 0.6 (min (list 2.5 price)))) 2

  ; —————— Calculate Average AI Level and Generation ——————
  let ai-values [ai-level] of manufacturers
  let gen-values [ai-generation] of manufacturers
  set avg-ai-level ifelse-value (length ai-values > 0) [mean ai-values] [0.0]
  set avg-ai-gen   ifelse-value (length gen-values > 0) [mean gen-values] [1.0]
  set avg-ai-level precision avg-ai-level 3
  set avg-ai-gen   precision avg-ai-gen 2

  ; —————— Policy Parameters ——————
  set green-subsidy green-subsidy-slider
  set ai-innovation-subsidy ai-innovation-slider
  set carbon-tax carbon-tax-slider
  set energy-tax 0.3     ; ✅ New: Basic energy tax per enterprise

  ; —————— Government Financial Mechanism (Optimized) ——————
  ; Tax on enterprises with low AI levels
  let num-low-ai count manufacturers with [ai-level < 0.5]
  let tax-revenue num-low-ai * carbon-tax * 0.8

  ; ✅ New: All manufacturers pay basic energy tax
  let energy-tax-revenue count manufacturers * energy-tax
  set transition-fund transition-fund + tax-revenue * 0.4 + energy-tax-revenue * 0.3

  ; Dynamic fund release
  let green-ratio (count patches with [pcolor = green]) / count patches
  let fund-ratio transition-fund / 100
  let release-rate (0.15 + (1 - green-ratio) * 0.2) * (1 + min (list fund-ratio 2))
  let fund-release min (list (transition-fund * release-rate) (transition-fund * 0.9))
  set transition-fund transition-fund - fund-release

  set gov-budget gov-budget + fund-release
    set gov-budget max (list gov-budget 150)

  ; ✅ ✅ Dynamic subsidy scaling: automatically reduce subsidies when budget is insufficient
  let subsidy-scale-factor ifelse-value (gov-budget < 200) [gov-budget / 200] [1]
  let adjusted-green-subsidy green-subsidy * subsidy-scale-factor
  let adjusted-ai-subsidy ai-innovation-subsidy * subsidy-scale-factor

  ; —————— Technology Dividend Events ——————
  if ticks > 0 and ticks mod 100 = 0 [
    let gen-increase avg-ai-gen - prev-ai-gen
    if gen-increase > 0.8 [
      ask manufacturers [ set competitiveness competitiveness + 3 ]   ; ← Replaced energy
      set price price * 1.08
    ]
    set prev-ai-gen avg-ai-gen
  ]

  ; —————— Manufacturer Behavior ——————
  ask manufacturers [
    ; Movement strategy
    let target one-of patches in-radius 15 with [pcolor = brown]
    ifelse target != nobody [
      face target
      forward 1
    ] [
      right (random 51 - 25)
      forward 0.5
    ]

    ; Competitiveness acquisition
    if pcolor = green [ set competitiveness competitiveness + 0.9 ]   ; ← Replaced energy
    if pcolor = brown [
      set countdown countdown - 5 * ai-level
      if countdown <= 0 [ set pcolor green set countdown 0 ]
    ]

    ; Technology spillover to suppliers (fixed version)
    let outer-myself self  ; Save current manufacturer
    ask suppliers in-radius 3 [
      set competitiveness competitiveness + 0.25 * [ai-level] of outer-myself   ; ← Replaced energy
    ]

    ; Competitiveness consumption
    set competitiveness competitiveness - 0.3 + ai-level * delta   ; ← Replaced energy

    ; —————— AI Generation Upgrade (Optimization: retain some technology) ——————
    if competitiveness > 8 and ai-level > 0.7 [   ; ← Replaced energy
      let upgrade-cost 15 + ai-generation * 6
      if competitiveness > upgrade-cost [   ; ← Replaced energy
        set competitiveness competitiveness - upgrade-cost   ; ← Replaced energy
        set ai-generation ai-generation + 1
        ; ✅ Retain some technology after upgrade to avoid "downgrading"
        set ai-level [ai-level] of outer-myself * 0.6 + 0.3
        set color scale-color blue ai-generation 1 6
        set label (word "G" ai-generation)
      ]
    ]

    ; Regular AI upgrade
    if competitiveness > 4 and ai-level < 1.0 [   ; ← Replaced energy
      let cost 8 + ai-level * 12
      if competitiveness > cost [   ; ← Replaced energy
        set competitiveness competitiveness - cost   ; ← Replaced energy
        set ai-level min (list (ai-level + 0.09) 1.0)
        set color scale-color blue ai-level 0 1
        set label precision ai-level 1
      ]
    ]

    ; Knowledge diffusion
    let partners manufacturers in-radius 7 with [ai-level > 0.1]
    if any? partners [
      let partner one-of partners
      let dist distance partner
      if random-float 1 < [ai-level] of partner / (1.5 + dist * 0.5) [
        set ai-level min (list (ai-level + 0.05) 1.0)
        set color scale-color blue ai-level 0 1
        set label precision ai-level 1
      ]
    ]

    ; Policy support (using scaled subsidies)
    if pcolor = green and gov-budget >= adjusted-green-subsidy and random-float 1 < 0.3 [  ; Previously 0.35 → 0.3
      set competitiveness competitiveness + adjusted-green-subsidy   ; ← Replaced energy
      set gov-budget gov-budget - adjusted-green-subsidy
    ]

    if ai-level > 0.3 and gov-budget >= adjusted-ai-subsidy and random-float 1 < 0.3 [  ; Previously 0.35 → 0.3
      set competitiveness competitiveness + adjusted-ai-subsidy   ; ← Replaced energy
      set gov-budget gov-budget - adjusted-ai-subsidy
    ]

    ; Technology backwardness tax
    if ai-level < 0.4 and ticks > 50 [
      set competitiveness competitiveness - carbon-tax * 0.8   ; ← Replaced energy
    ]

    ; Reproduction
    if competitiveness > 10 and count manufacturers < max-manufacturers and random-float 1 < 0.015 [   ; ← Replaced energy
      set competitiveness competitiveness / 2   ; ← Replaced energy
      hatch-manufacturers 1 [
        set ai-level 0.3
        set ai-generation 1
        set color blue
        set label "G1"
        setxy xcor + random-float 2 ycor + random-float 2
        set competitiveness 15   ; ← Replaced energy
      ]
    ]

    if competitiveness < 0 [ die ]   ; ← Replaced energy
  ]

  ; —————— Supplier Behavior (Enhanced Price Suppression) ——————
  ask suppliers [
    right (random 51 - 25)
    forward 0.7

    if pcolor = green [
      set competitiveness competitiveness + 1 + avg-ai-level * gamma   ; ← Replaced energy

      let base-prob 0.012
      let reproduction-prob base-prob * (price ^ 0.7)

      let market-saturation-factor (1 - (count suppliers / max-suppliers) ^ 0.3)
      let price-effect-factor (price / 1.0) ^ 0.5  ; ✅ More sensitive
      let density-factor (1 - min (list 1 (count suppliers / (max-suppliers * 1.0))))

      let final-prob reproduction-prob * density-factor * market-saturation-factor * price-effect-factor

      if competitiveness > 12 and random-float 1 < final-prob and (count suppliers / max list 1 count manufacturers) < 10 [   ; ← Replaced energy
        set competitiveness competitiveness / 2   ; ← Replaced energy
        hatch 1 [ forward 1 ]
      ]
    ]

    if pcolor = brown [ set competitiveness competitiveness - 0.65 ]   ; ← Replaced energy
    if competitiveness < 0 [ die ]   ; ← Replaced energy
  ]

  ; —————— Accelerated Green Transition ——————
  ask patches with [pcolor = brown] [
    set countdown countdown - 0.1 + avg-ai-level * epsilon * 0.5
    if countdown <= 0 [ set pcolor green set countdown 0 ]
  ]

  ; —————— External Shocks ——————
  if random-float 1 < disruption-prob [
    ask n-of (0.04 * count patches) patches [
      set pcolor brown
      set countdown countdown + random 30
    ]
    ask manufacturers [ set competitiveness competitiveness * 0.75 ]   ; ← Replaced energy
  ]

  ; —————— Data Recording (Reduced Frequency) ——————
  if ticks mod 20 = 0 [  ; Previously mod 10
    print (word "📊 T=" ticks
      " M=" count manufacturers
      " S=" count suppliers
      " Green=" count patches with [pcolor = green]
      " AI-L=" precision avg-ai-level 2
      " Gen=" precision avg-ai-gen 1
      " Price=" precision price 2
      " Budget=" precision gov-budget 0
      " Fund=" precision transition-fund 0)

    file-open "smart-green-manufacturing-data-v8.0 update.csv"
    file-print (word ticks "," count manufacturers "," count suppliers ","
                count patches with [pcolor = green] "," precision avg-ai-level 2 ","
                precision avg-ai-gen 2 "," precision price 2 ","
                precision gov-budget 0 "," precision transition-fund 0 ","
                supply "," demand)
    file-close
  ]

  tick
end
